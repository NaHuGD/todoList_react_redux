{"version":3,"sources":["App.js","store/reducers/index.js","store/index.js","index.js"],"names":["connect","state","todos","filter","dispatch","props","useState","todo","setState","addTodoFn","e","type","title","clickDisplay","display","value","onChange","target","onKeyPress","nativeEvent","key","onClick","todoFilter","item","complete","getTodos","map","className","id","console","log","Object","assign","initState","genId","createGenId","todoList","action","stateNew","todosNew","todoNew","i","length","curTodo","push","store","createStore","reducers","subscribe","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e9d575c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './App.css'\r\n\r\nconst App = (props) => {\r\n    const todoState = { todo: '' }\r\n\r\n    const [state, setState] = useState(todoState)\r\n\r\n    const inputValueFn = (e) => {\r\n        setState({\r\n            todo: e.target.value\r\n        })\r\n    }\r\n    const addTodoFn = (e) => {\r\n        // console.log('addProps', props)\r\n        if (state.todo !== '') {\r\n            setState({\r\n                ...state,\r\n                todo: ''\r\n            })\r\n            const { dispatch } = props\r\n            // 保存到todo,redux store\r\n            dispatch({ type: 'add', title: state.todo })\r\n        }\r\n    }\r\n\r\n    const removeTodoFn = (todo) => {\r\n        console.log('remove', todo)\r\n        const { dispatch } = props\r\n        const todoNew = Object.assign({}, todo, {\r\n            complete: !todo.complete\r\n        })\r\n\r\n        dispatch({\r\n            type: 'update',\r\n            todo: todoNew\r\n        })\r\n    }\r\n\r\n    const clickDisplay = (display) => {\r\n        // console.log(display)\r\n        const { dispatch } = props\r\n        dispatch({ type: 'filter', display: display })\r\n    }\r\n\r\n    const getTodos = () => {\r\n        const { todos, filter } = props\r\n        let todoFilter = [];\r\n        if (filter === 'all') {\r\n            return todoFilter = todos\r\n        } else if (filter === 'done') {\r\n            return todoFilter = todos.filter((item) => {\r\n                return item.complete === true\r\n            })\r\n        } else if (filter === 'undone') {\r\n            return todoFilter = todos.filter((item) => {\r\n                return item.complete === false\r\n            })\r\n        }\r\n        return todoFilter\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Todo APP</h1>\r\n            <input type=\"text\" value={state.todo} onChange={inputValueFn} onKeyPress={(e) => { e.nativeEvent.key === \"Enter\" && addTodoFn() }} />\r\n            <button onClick={(e) => addTodoFn(e)}>新增代辦</button>\r\n            <ul>\r\n                {getTodos().map((item) => {\r\n                    return <li className={item.complete ? \"complete\" : \"\"} key={item.id} onClick={() => removeTodoFn(props.todos[item.id])}>{item.title}</li>\r\n                })}\r\n            </ul>\r\n            <div>\r\n                <button className={props.filter === 'all' ? \"btnActive\" : \"\"} onClick={() => clickDisplay('all')}>全部顯示</button>\r\n                <button className={props.filter === 'done' ? \"btnActive\" : \"\"} onClick={() => clickDisplay('done')}>已完成</button>\r\n                <button className={props.filter === 'undone' ? \"btnActive\" : \"\"} onClick={() => clickDisplay('undone')}>未完成</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect((state) => {\r\n    // console.log('app=>state', state)\r\n    return {\r\n        todos: state.todos,\r\n        filter: state.filter\r\n    }\r\n}, (dispatch) => {\r\n    // console.log('app=>dispatch', dispatch)\r\n    return {\r\n        dispatch: dispatch\r\n    }\r\n})(App)","const initState = {\r\n    todos: [],\r\n    filter: 'all' //all,done,undone\r\n}\r\n\r\nconst createGenId = () => {\r\n    let id = 0\r\n    console.log('id', id)\r\n    return () => {\r\n        return id++\r\n    }\r\n}\r\nconst genId = createGenId()\r\n\r\nconst todoList = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            {\r\n                const todos = [\r\n                    ...state.todos, {\r\n                        id: genId(),\r\n                        title: action.title,\r\n                        complete: false\r\n                    }]\r\n                const stateNew = Object.assign({}, state, {\r\n                    todos: todos\r\n                })\r\n                return stateNew\r\n            }\r\n        case 'update':\r\n            {\r\n                let todosNew = [];\r\n                let todoNew = action.todo\r\n                for (let i = 0; i < state.todos.length; i++) {\r\n                    let curTodo = state.todos[i]\r\n                    if (curTodo.id === todoNew.id) {\r\n                        todosNew.push(todoNew)\r\n                    } else {\r\n                        todosNew.push(curTodo)\r\n                    }\r\n                }\r\n                const stateNew = Object.assign({}, state, {\r\n                    todos: todosNew\r\n                })\r\n                return stateNew\r\n            }\r\n        case 'filter':\r\n            {\r\n                const stateNew = Object.assign({}, state, {\r\n                    filter: action.display\r\n                })\r\n                return stateNew\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todoList","import { createStore } from 'redux'\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers)\r\nstore.subscribe(() => {\r\n    console.log('更新subscribe', store.getState())\r\n})\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// component\r\nimport App from './App'\r\n// react-redux\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n// CSS \r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root')\r\n)"],"sourceRoot":""}